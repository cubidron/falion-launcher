/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeRouteImport } from './routes/home/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as HomeSettingsImport } from './routes/home/settings'
import { Route as HomeAboutImport } from './routes/home/about'
import { Route as AuthConfirmImport } from './routes/auth/confirm'

// Create/Update Routes

const HomeRouteRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const HomeSettingsRoute = HomeSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => HomeRouteRoute,
} as any)

const HomeAboutRoute = HomeAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => HomeRouteRoute,
} as any)

const AuthConfirmRoute = AuthConfirmImport.update({
  id: '/confirm',
  path: '/confirm',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/confirm': {
      id: '/auth/confirm'
      path: '/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmImport
      parentRoute: typeof AuthRouteImport
    }
    '/home/about': {
      id: '/home/about'
      path: '/about'
      fullPath: '/home/about'
      preLoaderRoute: typeof HomeAboutImport
      parentRoute: typeof HomeRouteImport
    }
    '/home/settings': {
      id: '/home/settings'
      path: '/settings'
      fullPath: '/home/settings'
      preLoaderRoute: typeof HomeSettingsImport
      parentRoute: typeof HomeRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthConfirmRoute: typeof AuthConfirmRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConfirmRoute: AuthConfirmRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface HomeRouteRouteChildren {
  HomeAboutRoute: typeof HomeAboutRoute
  HomeSettingsRoute: typeof HomeSettingsRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeAboutRoute: HomeAboutRoute,
  HomeSettingsRoute: HomeSettingsRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/auth/confirm': typeof AuthConfirmRoute
  '/home/about': typeof HomeAboutRoute
  '/home/settings': typeof HomeSettingsRoute
  '/auth/': typeof AuthIndexRoute
  '/home/': typeof HomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/home/about': typeof HomeAboutRoute
  '/home/settings': typeof HomeSettingsRoute
  '/auth': typeof AuthIndexRoute
  '/home': typeof HomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/auth/confirm': typeof AuthConfirmRoute
  '/home/about': typeof HomeAboutRoute
  '/home/settings': typeof HomeSettingsRoute
  '/auth/': typeof AuthIndexRoute
  '/home/': typeof HomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/home'
    | '/auth/confirm'
    | '/home/about'
    | '/home/settings'
    | '/auth/'
    | '/home/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/confirm'
    | '/home/about'
    | '/home/settings'
    | '/auth'
    | '/home'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/home'
    | '/auth/confirm'
    | '/home/about'
    | '/home/settings'
    | '/auth/'
    | '/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  HomeRouteRoute: HomeRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/home"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/confirm",
        "/auth/"
      ]
    },
    "/home": {
      "filePath": "home/route.tsx",
      "children": [
        "/home/about",
        "/home/settings",
        "/home/"
      ]
    },
    "/auth/confirm": {
      "filePath": "auth/confirm.tsx",
      "parent": "/auth"
    },
    "/home/about": {
      "filePath": "home/about.tsx",
      "parent": "/home"
    },
    "/home/settings": {
      "filePath": "home/settings.tsx",
      "parent": "/home"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/home/": {
      "filePath": "home/index.tsx",
      "parent": "/home"
    }
  }
}
ROUTE_MANIFEST_END */
